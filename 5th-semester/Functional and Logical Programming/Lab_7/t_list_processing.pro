/*****************************************************************************

		Copyright (c) My Company

 Project:  T_LIST_PROCESSING
 FileName: T_LIST_PROCESSING.PRO
 Purpose: No description
 Written by: Visual Prolog
 Comments:
******************************************************************************/

include "t_list_processing.inc"

domains
	t_list = INTEGER* %Объявление домена-списка чисел.

predicates
	%Отношения (вспомогательные).
	nondeterm member(t_list, INTEGER)
	nondeterm unique(t_list)

	%Отношение для удаления заданного числового элемента из одноуровневого списка из чисел.
	nondeterm remove(INTEGER, t_list, t_list)
	%Отношение для объединения двух множеств.
	nondeterm union(t_list, t_list, t_list)
	
clauses
	%Проверка принадлежности элемента списку.
	member([X|_], X).
	member([_|T], X) :-
		member(T, X).
	%Проверка уникальности элементов в списке.
	unique([]).
	unique([H|T]) :-
		member(T,H), !, fail;
		unique(T).
		

	%Базовый случай остановки рекурсивного вызова правила.
	remove(_, [], []).
	%Правило, выполняющееся в случае, когда голова рассматриваемого списка равна удаляемому элементу.
	remove(Element, [Element|T], Result) :-
		remove(Element, T, Result).
	%Правило, выполняющееся в случае, когда голова рассматриваемого списка не равна удаляемому элементу.
	remove(Element, [H|T], [H|Result]) :-
		not(Element = H),
		remove(Element, T, Result).
	
	%Базовый случай остановки рекурсивного вызова правила.
	union([],L2,L2).
	%Правило, выполнющееся в случае, когда голова из рассматриваемого списка L1 содержится в списке L2.
	union([H1|T1],L2,Result) :- 
			member(L2, H1), !, union(T1, L2, Result).
	%Правило, выполняющееся в случае, когда в списке L1 еще остались элементы. Тогда в список Result ооответствующие элементы рекурсивно добавляются.
	union([H1|T1],L2,[H1|Result]) :-
			union(T1,L2,Result).
		
	
goal
	%Удаление из заданного списка указанного элемента.
	%write("Требуется удалить из списка [1,2,3,4,5,6] элемент 3. Преобразованный список:"), nl,
	%remove(3, [1,2,3,4,5,6], Result).
	%write("Требуется удалить из списка [1,2,3,2,4,2,5,6,2,2] элемент 2. Преобразованный список:"), nl,
	%remove(2, [1,2,3,2,4,2,5,6,2,2], Result).
	
	%Объединение двух множеств в один список.
	write("Требуется объединить множества элементов списков [1,2,3,4] и [1,2,3,5,6,19,20]. Полученный результат:"), nl,
	union([1,2,3,4],[1,2,3,5,6,19,20], Result).
	%write("Требуется объединить множества элементов списков [1,2,3] и [1,2,3,5,6,7,8]. Полученный результат:"), nl,
	%union([1,2,3],[1,2,3,5,6,7,8], Result).